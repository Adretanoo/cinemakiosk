package com.adrian.cinemakiosk.appui.pages;

import com.adrian.cinemakiosk.persistence.entity.impl.Ticket;
import com.googlecode.lanterna.TextColor;
import com.googlecode.lanterna.graphics.TextGraphics;
import com.googlecode.lanterna.input.KeyType;
import com.googlecode.lanterna.screen.Screen;

import java.io.IOException;
import java.util.List;

/**
 * –ö–ª–∞—Å, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–≤–∏—Ç–∫—ñ–≤ —ñ –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –Ω–∏—Ö.
 * –ö–ª–∞—Å –¥–æ–∑–≤–æ–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–≤–∏—Ç–∫–∏, –≤–∏–±–∏—Ä–∞—Ç–∏ —ó—Ö –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–µ—Ç–∞–ª–µ–π.
 */
public class TicketView {

    private static final int MAX_VISIBLE_RESULTS = 5;
    private final Screen screen;
    private final TextGraphics textGraphics;
    private final List<Ticket> tickets;
    private int selectedIndex = 0;
    private int topIndex = 0;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –µ–∫—Ä–∞–Ω–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–≤–∏—Ç–∫—ñ–≤.
     *
     * @param screen         –µ–∫—Ä–∞–Ω –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     * @param textGraphics   –≥—Ä–∞—Ñ—ñ—á–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –º–∞–ª—é–≤–∞–Ω–Ω—è –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
     * @param tickets        —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–≤–∏—Ç–∫—ñ–≤
     */
    public TicketView(Screen screen, TextGraphics textGraphics, List<Ticket> tickets) {
        this.screen = screen;
        this.textGraphics = textGraphics;
        this.tickets = tickets;
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–≤–∏—Ç–∫—ñ–≤ —ñ –¥–æ–∑–≤–æ–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —ó—Ö.
     * –¢–∞–∫–æ–∂ –¥–æ–∑–≤–æ–ª—è—î –≤–∏–±–∏—Ä–∞—Ç–∏ –∫–≤–∏—Ç–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–µ—Ç–∞–ª–µ–π –∞–±–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–µ–Ω—é.
     *
     * @throws IOException –≤ —Ä–∞–∑—ñ –ø—Ä–æ–±–ª–µ–º –∑ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
     */
    public void displayTickets() throws IOException {
        if (tickets.isEmpty()) {
            screen.clear();
            textGraphics.setForegroundColor(TextColor.Factory.fromString("#FF0000"));
            textGraphics.putString(2, 3, "–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–≤–∏—Ç–∫—ñ–≤.");
            screen.refresh();
            screen.readInput();
            return;
        }

        selectedIndex = 0;
        topIndex = 0;
        while (true) {
            renderTickets();
            var keyStroke = screen.readInput();

            if (keyStroke.getKeyType() == KeyType.Escape) {
                return;  // –í–∏—Ö—ñ–¥ –∑ –º–µ–Ω—é –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ Escape
            } else if (keyStroke.getKeyType() == KeyType.ArrowUp && selectedIndex > 0) {
                selectedIndex--;  // –ü–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –≤–≥–æ—Ä—É –ø–æ —Å–ø–∏—Å–∫—É –∫–≤–∏—Ç–∫—ñ–≤
                if (selectedIndex < topIndex) {
                    topIndex--;  // –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤–≥–æ—Ä—É
                }
            } else if (keyStroke.getKeyType() == KeyType.ArrowDown && selectedIndex < tickets.size() - 1) {
                selectedIndex++;  // –ü–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –≤–Ω–∏–∑ –ø–æ —Å–ø–∏—Å–∫—É –∫–≤–∏—Ç–∫—ñ–≤
                if (selectedIndex >= topIndex + MAX_VISIBLE_RESULTS) {
                    topIndex++;  // –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤–Ω–∏–∑
                }
            } else if (keyStroke.getKeyType() == KeyType.Enter) {
                showTicketDetails(tickets.get(selectedIndex));  // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∫–≤–∏—Ç–∫–∞
            }
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î —Å–ø–∏—Å–æ–∫ –∫–≤–∏—Ç–∫—ñ–≤ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º –Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–¥–∏–º–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ (MAX_VISIBLE_RESULTS).
     *
     * @throws IOException –≤ —Ä–∞–∑—ñ –ø—Ä–æ–±–ª–µ–º –∑ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
     */
    private void renderTickets() throws IOException {
        screen.clear();
        textGraphics.setForegroundColor(TextColor.Factory.fromString("#FFFF00"));
        textGraphics.putString(2, 1, "üéü –î–æ—Å—Ç—É–ø–Ω—ñ –∫–≤–∏—Ç–∫–∏:");

        int y = 3;
        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –∫–≤–∏—Ç–∫–∏ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
        for (int i = topIndex; i < Math.min(topIndex + MAX_VISIBLE_RESULTS, tickets.size()); i++) {
            Ticket ticket = tickets.get(i);
            String indicator = (i == selectedIndex) ? "‚ùØ " : "  ";

            textGraphics.setForegroundColor(i == selectedIndex ?
                TextColor.Factory.fromString("#FFFF00") : TextColor.Factory.fromString("#FFFFFF"));

            textGraphics.putString(2, y, indicator + ticket.getMovie() + " | " + ticket.getTime());
            textGraphics.putString(4, y + 1, "–¶—ñ–Ω–∞: " + ticket.getPrice() + " –≥—Ä–Ω");
            textGraphics.putString(4, y + 2, "–ú—ñ—Å—Ü—è: " + ticket.getQuantity());
            y += 4;
        }
        screen.refresh();
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –¥–µ—Ç–∞–ª—ñ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∫–≤–∏—Ç–∫–∞ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ.
     *
     * @param ticket –≤–∏–±—Ä–∞–Ω–∏–π –∫–≤–∏—Ç–æ–∫ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É
     * @throws IOException –≤ —Ä–∞–∑—ñ –ø—Ä–æ–±–ª–µ–º –∑ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
     */
    private void showTicketDetails(Ticket ticket) throws IOException {
        screen.clear();
        textGraphics.setForegroundColor(TextColor.Factory.fromString("#FFFF00"));
        textGraphics.putString(2, 2, "üéü –î–µ—Ç–∞–ª—ñ –∫–≤–∏—Ç–∫–∞:");
        textGraphics.setForegroundColor(TextColor.Factory.fromString("#FFFFFF"));

        textGraphics.putString(2, 4, "–§—ñ–ª—å–º: " + ticket.getMovie());
        textGraphics.putString(2, 5, "–ß–∞—Å: " + ticket.getTime());
        textGraphics.putString(2, 6, "–¶—ñ–Ω–∞: " + ticket.getPrice() + " –≥—Ä–Ω");
        textGraphics.putString(2, 7, "–ö—ñ–ª—å–∫—ñ—Å—Ç—å: " + ticket.getQuantity());

        textGraphics.setForegroundColor(TextColor.Factory.fromString("#00FF00"));
        textGraphics.putString(2, 9, "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –±—É–¥—å-—è–∫—É –∫–ª–∞–≤—ñ—à—É –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è");
        screen.refresh();
        screen.readInput();
    }
}
